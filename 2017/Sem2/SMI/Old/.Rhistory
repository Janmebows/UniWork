library("tidyverse")
install.packages(c("tidyverse", "magrittr", "readxl", "rmarkdown"))
library(tidyverse)
data("mpg")
ggplot(data=mpg,aes(x=displ,y=cty)) + geom_dotplot()
ggplot(data=mpg,aes(x=displ,y=cty)) + geom_point()
M1 = lm(cty~displ,data=mpg)
M1
summary(M1)
2^100
2^1000
1/ans
1/2^1000
clc
tidy(M1)
library(broom)
tidy(M1)
tmp = par(mfrow = c(2,2))
tmp
mfrow
plot(M1)
par(tmp)
plot(M1)
par(tmp)
plot(M1)
tmp = par(mfrow = c(2,2))
plot(M1)
mfrow?
?mfrow
par(tmp)
newdata = tibble(
displ = 3:6
)
newdata$pred = predict(M1,newdata = newdata)
newdata
library(tidyverse)
data("mpg")
ggplot(data=mpg,aes(x=displ,y=cty)) + geom_point()
M1 = lm(cty~displ,data=mpg)
summary(M1)
library(broom)
tidy(M1)
tmp = par(mfrow = c(2,2))
plot(M1)
par(tmp)
newdata = tibble(
displ = 3:6
)
newdata$pred = predict(M1,interval=confidence,newdata = newdata)
newdata$pred = predict(M1,interval = conf,newdata = newdata)
library(tidyverse)
data("mpg")
ggplot(data=mpg,aes(x=displ,y=cty)) + geom_point()
M1 = lm(cty~displ,data=mpg)
summary(M1)
library(broom)
tidy(M1)
tmp = par(mfrow = c(2,2))
plot(M1)
par(tmp)
newdata = tibble(
displ = 3:6
)
newdata$pred = predict(M1,newdata = newdata)
anova(M2)
M2 = lm(cty~drv, data = mpg)
anova(M2)
M2 = lm(cty~drv, data = mpg)
anova(M2)
M3  <-lm(cty~displ+drv, data = mpg)
M4  <-lm(cty~displ+drv+displ:drv, data = mpg)
M5  <-lm(cty~displ*drv, data = mpg)
M6  <-lm(cty~displ*drv*cyl, data = mpg)
M7  <-lm(cty~(displ+drv+cyl)^2, data = mpg)
M8  <-lm(cty~displ*(drv+cyl), data = mpg)
summary(M3)
summary(M3)
summary(M4)
summary(M5)
summary(M6)
summary(M7)
summary(M8)
summary(M3)
X=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
X1=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
X =c(X1,X2,X3)
X
cbind(X1,X2,X3)
X =cbind(X1,X2,X3)
Y=c(1,0,0,1,2,3,3)
Y
Y=t(c(1,0,0,1,2,3,3))
Y
X
inv(t(X)%*%X)
solve(t(X)%*%X)
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
a=solve(t(X)%*%X)
b=a%*%t(X)
c=b%*%Y
b
Y
X
t(X)
library(tidyverse)
read(msleep)
load(msleep)
open(msleep)
data(msleep)
summary(msleep)
msleep
head(msleep)
ggplot(msleep,aes(x=vore,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
ggplot(msleep,aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep$order
filter(msleep,vore %in% c("Carnivora","Rodentia"))
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep%>%
filter(vore %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")+xlab("Order")+ylab("Total sleep")
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
ggplot(aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")+xlab("Order")+ylab("Total sleep")
plot(msleep$order)
msleeplin = msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
lm(sleep_total~order)
msleeplin = msleep%>%
filter(order %in% c("Carnivora","Rodentia"))
msleeplin = lm(sleep_total~order,data=msleeplin)
temp = msleep%>%
filter(order %in% c("Carnivora","Rodentia"))
msleeplin = lm(sleep_total~order,data=temp)
library(broom)
summary(msleeplin)
library(broom)
tidy(msleeplin)
tmp = par(mfrow = c(2,2))
plot(msleeplin)
par(tmp)
X1=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
Y=c(1,0,0,1,2,3,3)
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
X =cbind(X1,X2,X3)
Y=c(1,0,0,1,2,3,3)
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
betahat
Ypredict = c(1,-3,-1) * betahat
Ypredict
Ypredict = c(1,-3,-1) %*% betahat
ypred
Ypredict = c(1,-3,-1) %*% betahat
Ypredict
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
t.test(sleep_total~order)
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
t.test(sleep_total~order)
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
t.test(sleep_total~order)
library(tidyverse)
msleep%>%
filter(order %in% c("Carnivora","Rodentia"))%>%
t.test(sleep_total~order)
t.test(sleep_total~order,data=temp)
ggplot(data=temp,aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")+xlab("Order")+ylab("Total sleep")
summary(msleeplin)
library(broom)
tidy(msleeplin)
tmp = par(mfrow = c(2,2))
plot(msleeplin)
par(tmp)
setwd("D:/Documents/Uni/Smi")
summary(msleeplin)
library(broom)
tidy(msleeplin)
tmp = par(mfrow = c(2,2))
pdf(file="Graphs.pdf")
plot(msleeplin)
dev.off()
tmp = par(mfrow = c(2,2))
pdf(file="Graphs.pdf")
plot(msleeplin)
tmp = par(mfrow = c(2,2))
pdf(file="Graphs.pdf")
plot(msleeplin)
dev.off()
pdf(file="Graphs.pdf")
tmp = par(mfrow = c(2,2))
plot(msleeplin)
dev.off()
pdf(file="BoxplotSleepTotal.pdf")
ggplot(data=temp,aes(x=order,y=sleep_total)) + geom_boxplot() + labs(title="Side-by-side boxplot of the sleep totals for Carnivora and Rodentia")+xlab("Order")+ylab("Total sleep")
dev.off()
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
betahat
X0 = c(1,1,1,1,1,1,1)
X1=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
X =cbind(X0,X1,X2,X3)
Y=c(1,0,0,1,2,3,3)
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
betahat
Ypredict = c(1,-3,-1) %*% betahat
Ypredict = c(1,1,-3,-1) %*% betahat
Ypredict
betahat(3)
betahat[3]
lambda = c(0,0,0,betahat[4])
lambda
lambda = c(0,0,0,1)
stderror = 1/(n-p) * t(y-X*betahat)%*%(y-X*betahat)
n=7
p=4
stderror = 1/(n-p) * t(y-X*betahat)%*%(y-X*betahat)
library(tidyverse)
setwd("D:/Documents/Uni/Smi")
X0 = c(1,1,1,1,1,1,1)
X1=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
X =cbind(X0,X1,X2,X3)
Y=c(1,0,0,1,2,3,3)
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
Ypredict = c(1,1,-3,-1) %*% betahat
lambda = c(0,0,0,1)
n=7
p=4
stderror = 1/(n-p) * t(Y-X*betahat)%*%(Y-X*betahat)
X
betahat
stderror = 1/(n-p) * t(Y-X*betahat)%*%(Y-X*betahat)
stderror = 1/(n-p) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat=t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
teststat
teststat=t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
teststat
lambda = c(0,0,0,1)
lambda
lambda = t(c(0,0,0,1))
n=7
p=4
stderror = 1/(n-p) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat=t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
lambda = c(0,0,0,1)
n=7
p=4
stderror = 1/(n-p) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat=t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
lambda2 = c(1,1,-3,-1)
teststat=t(lambda2)%*%betahat/(stderror*sqrt(t(lambda2)%*%solve(t(X)%*%X)%*%lambda2))
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
lambda2 = c(1,1,-3,-1)
teststat2 =t(lambda2)%*%betahat/(stderror*sqrt(t(lambda2)%*%solve(t(X)%*%X)%*%lambda2))
teststat2
betahat = solve(t(X)%*%X)%*%t(X)%*%Y
lambda = c(0,0,0,1)
n=7
p=4
stderror = 1/(n-p) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
lambda2 = c(1,1,-3,-1)
teststat2 =t(lambda2)%*%betahat/(stderror*sqrt(t(lambda2)%*%solve(t(X)%*%X)%*%lambda2))
teststat
teststat2
stderror
stderror = (1/(n-p)) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
stderror
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
teststat
t(lambda)%*%betahat
t(lambda)%*%betahat/stderror
t(lambda)%*%betahat/stderror /(sqrt(t(lambda)%*%solve(t(X)%*%X)%*%lambda))
X
Y
XTXinv =  solve(t(X)%*%X)
betahat = XTXinv%*%t(X)%*%Y
betahat
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%XTXinv%*%lambda))
lambda2 = c(1,1,-3,-1)
teststat2 =t(lambda2)%*%betahat/(stderror*sqrt(t(lambda2)%*%XTXinv%*%lambda2))
teststat
teststat2
n=7
p=4
stderror = (1/(n-p)) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%XTXinv%*%lambda))
t.test(Y~X)
teststat =t(lambda)%*%betahat/(stderror*sqrt(t(lambda)%*%XTXinv%*%lambda))
teststat
sqrt(2)
sqrt(2,3)
stderror = (1/(n-p)) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
teststat =t(lambda)%*%betahat/(sqrt(stderror*t(lambda)%*%XTXinv%*%lambda))
teststat
pval = dt(teststat,n-p)
pval
stderror
lambda2 = c(1,1,-3,-1)
teststat2 =t(lambda2)%*%betahat/(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
2+c(1,3)
CI = lambda2+c(-tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)),tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)))
tval= dt(teststat2,n-p)
CI = lambda2+c(-tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)),tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)))
CI
CI = t(lambda2)%*%betahat+c(-tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)),tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)))
tval= dt(0.025,n-p)
CI = t(lambda2)%*%betahat+c(-tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)),tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2)))
CI
tval= dt(0.025,n-p)
CI = lambda2+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
t(lambda2)%*%betahat
tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
lambda2 = c(1,1,-3,-1)
tval= dt(0.025,n-p)
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
?dt
stderror
library(tidyverse)
X0 = c(1,1,1,1,1,1,1)
setwd("D:/Documents/Uni/Smi")
X1=c(-3,-2,-1,0,1,2,3)
X2=c(5,0,-3,-4,-3,0,5)
X3=c(-1,1,1,0,-1,-1,1)
X =cbind(X0,X1,X2,X3)
Y=c(1,0,0,1,2,3,3)
XTXinv =  solve(t(X)%*%X)
betahat = XTXinv%*%t(X)%*%Y
Ypredict = c(1,1,-3,-1) %*% betahat
lambda = c(0,0,0,1)
n=7
stderror = (1/(n-p)) * t(Y-X%*%betahat)%*%(Y-X%*%betahat)
p=4
teststat =t(lambda)%*%betahat/(sqrt(stderror*t(lambda)%*%XTXinv%*%lambda))
pval = dt(teststat,n-p)
lambda2 = c(1,1,-3,-1)
teststat2 =t(lambda2)%*%betahat/(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
tval= dt(0.025,n-p)
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CKI
CI
tval= dt(0.05,n-p)
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
lambda2 = c(1,1,-3,-1)
betahat
tval= dt(0.025,n-p)
tval
dt(0.975,n-p)
tval= qt(0.025,n-p)
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
tval= qt(0.975,n-p)
CI = t(lambda2)%*%betahat+c(-1,1)*tval*(sqrt(stderror*t(lambda2)%*%XTXinv%*%lambda2))
CI
plot(sleep_total~order,data=temp)
