anssqrt=predict(stepautosqrtmodel, newdata=example)
(anssqrt)^2
pdf(file="ProjectGraphs.pdf")
ggplot(aes(x=age,y=price),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against price")+xlab("Age of dog")+ylab("Price of dog")
ggplot(aes(x=cross,y=price),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against price")+xlab("Cross breed or not")+ylab("Price of dog") + ylim(0,3000)
ggplot(aes(x=vacc,y=price),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against price")+xlab("Vaccinated or not")+ylab("Price of dog") +ylim(0,2500)
ggplot(aes(x=micro,y=price),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against price")+xlab("Microchipped or not")+ylab("Price of dog")+ylim(0,2000)
ggplot(aes(x=desex,y=price),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against price")+xlab("Desexed or not")+ylab("Price of dog")+ylim(0,4000)
ggplot(aes(x=relinquished,y=price),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against price")+xlab("Relinquished or not")+ylab("Price of dog")+ylim(0,3000)
ggplot(aes(x=state,y=price),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against price")+xlab("State of seller")+ylab("Price of dog") +ylim(0,2000)
ggplot(aes(x=age,y=logprice),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against logprice")+xlab("Age of dog")+ylab("logprice of dog")
ggplot(aes(x=cross,y=logprice),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against logprice")+xlab("Cross breed or not")+ylab("logprice of dog") + ylim(0,3000)
ggplot(aes(x=vacc,y=logprice),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against logprice")+xlab("Vaccinated or not")+ylab("logprice of dog") +ylim(0,2500)
ggplot(aes(x=micro,y=logprice),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against logprice")+xlab("Microchipped or not")+ylab("logprice of dog")+ylim(0,2000)
ggplot(aes(x=desex,y=logprice),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against logprice")+xlab("Desexed or not")+ylab("logprice of dog")+ylim(0,4000)
ggplot(aes(x=relinquished,y=logprice),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against logprice")+xlab("Relinquished or not")+ylab("logprice of dog")+ylim(0,3000)
ggplot(aes(x=state,y=logprice),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against logprice")+xlab("State of seller")+ylab("logprice of dog") +ylim(0,2000)
ggplot(aes(x=age,y=sqrt(price)),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against sqrt(price)")+xlab("Age of dog")+ylab("sqrt(price) of dog")
ggplot(aes(x=cross,y=sqrt(price)),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against sqrt(price)")+xlab("Cross breed or not")+ylab("sqrt(price) of dog") + ylim(0,3000)
ggplot(aes(x=vacc,y=sqrt(price)),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against sqrt(price)")+xlab("Vaccinated or not")+ylab("sqrt(price) of dog") +ylim(0,2500)
ggplot(aes(x=micro,y=sqrt(price)),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against sqrt(price)")+xlab("Microchipped or not")+ylab("sqrt(price) of dog")+ylim(0,2000)
ggplot(aes(x=desex,y=sqrt(price)),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against sqrt(price)")+xlab("Desexed or not")+ylab("sqrt(price) of dog")+ylim(0,4000)
ggplot(aes(x=relinquished,y=sqrt(price)),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against sqrt(price)")+xlab("Relinquished or not")+ylab("sqrt(price) of dog")+ylim(0,3000)
ggplot(aes(x=state,y=sqrt(price)),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against sqrt(price)")+xlab("State of seller")+ylab("sqrt(price) of dog") +ylim(0,2000)
dev.off()
full = price~(age+cross+vacc+micro+desex+relinquished+state)^2
sqrt(3000)
sqrt(4000)
pdf(file="ProjectGraphs.pdf")
ggplot(aes(x=age,y=price),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against price")+xlab("Age of dog")+ylab("Price of dog")
ggplot(aes(x=cross,y=price),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against price")+xlab("Cross breed or not")+ylab("Price of dog") + ylim(0,3000)
ggplot(aes(x=vacc,y=price),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against price")+xlab("Vaccinated or not")+ylab("Price of dog") +ylim(0,2500)
ggplot(aes(x=micro,y=price),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against price")+xlab("Microchipped or not")+ylab("Price of dog")+ylim(0,2000)
ggplot(aes(x=desex,y=price),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against price")+xlab("Desexed or not")+ylab("Price of dog")+ylim(0,4000)
ggplot(aes(x=relinquished,y=price),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against price")+xlab("Relinquished or not")+ylab("Price of dog")+ylim(0,3000)
ggplot(aes(x=state,y=price),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against price")+xlab("State of seller")+ylab("Price of dog") +ylim(0,2000)
ggplot(aes(x=age,y=logprice),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against logprice")+xlab("Age of dog")+ylab("logprice of dog")
ggplot(aes(x=cross,y=logprice),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against logprice")+xlab("Cross breed or not")+ylab("logprice of dog") + ylim(0,log(3000))
ggplot(aes(x=vacc,y=logprice),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against logprice")+xlab("Vaccinated or not")+ylab("logprice of dog") +ylim(0,log(2500))
ggplot(aes(x=micro,y=logprice),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against logprice")+xlab("Microchipped or not")+ylab("logprice of dog")+ylim(0,log(2000))
ggplot(aes(x=desex,y=logprice),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against logprice")+xlab("Desexed or not")+ylab("logprice of dog")+ylim(0,log(4000))
ggplot(aes(x=relinquished,y=logprice),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against logprice")+xlab("Relinquished or not")+ylab("logprice of dog")+ylim(0,log(3000))
ggplot(aes(x=state,y=logprice),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against logprice")+xlab("State of seller")+ylab("logprice of dog") +ylim(0,log(2000))
ggplot(aes(x=age,y=sqrt(price)),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against sqrt(price)")+xlab("Age of dog")+ylab("sqrt(price) of dog")
ggplot(aes(x=cross,y=sqrt(price)),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against sqrt(price)")+xlab("Cross breed or not")+ylab("sqrt(price) of dog") + ylim(0,100)
ggplot(aes(x=vacc,y=sqrt(price)),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against sqrt(price)")+xlab("Vaccinated or not")+ylab("sqrt(price) of dog") +ylim(0,80)
ggplot(aes(x=micro,y=sqrt(price)),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against sqrt(price)")+xlab("Microchipped or not")+ylab("sqrt(price) of dog")+ylim(0,80)
ggplot(aes(x=desex,y=sqrt(price)),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against sqrt(price)")+xlab("Desexed or not")+ylab("sqrt(price) of dog")+ylim(0,100)
ggplot(aes(x=relinquished,y=sqrt(price)),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against sqrt(price)")+xlab("Relinquished or not")+ylab("sqrt(price) of dog")+ylim(0,100)
ggplot(aes(x=state,y=sqrt(price)),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against sqrt(price)")+xlab("State of seller")+ylab("sqrt(price) of dog") +ylim(0,100)
dev.off()
layout(matrix(c(1,1,2,3),2,2 byrow = TRUE))
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
ggplot(aes(x=age,y=price),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against price")+xlab("Age of dog")+ylab("Price of dog")
?ggarrange
??ggarrange
library(tidyverse)
gumtree%>%
split(.$'Pet Offered By:')%>%
map_df(~get_ci(.$price), .id = 'Pet Offered By:')
library(broom)
library(readxl)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
library(tidyverse)
library(broom)
library(readxl)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
summary(gumtree$price)
summary(gumtree$age)
table(gumtree$cross)
table(gumtree$vacc)
table(gumtree$micro)
table(gumtree$relinquished)
table(gumtree$desex)
table(gumtree$state)
ggplot(gumtree,aes(price)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(age)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(gumtree$cross, fill =gumtree$cross)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Crossbreed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$vacc, fill =gumtree$vacc)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1")+
labs(x = "Vaccination status", y = "Frequency")
ggplot(gumtree,aes(gumtree$micro, fill =gumtree$micro)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Microchipped status", y = "Frequency")
ggplot(gumtree,aes(gumtree$desex, fill =gumtree$desex)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Desexed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$relinquished, fill =gumtree$relinquished)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Relinquished status", y = "Frequency")
ggplot(gumtree,aes(gumtree$state, fill =gumtree$state)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "State", y = "Frequency")
ggplot(gumtree,aes(price)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(age)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(price)) + geom_histogram(col = "black", fill = "orange")
pdf(file = "varAnalPlots.pdf")
ggplot(gumtree,aes(price)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(age)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(gumtree$cross, fill =gumtree$cross)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Crossbreed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$vacc, fill =gumtree$vacc)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1")+
labs(x = "Vaccination status", y = "Frequency")
ggplot(gumtree,aes(gumtree$micro, fill =gumtree$micro)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Microchipped status", y = "Frequency")
ggplot(gumtree,aes(gumtree$desex, fill =gumtree$desex)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Desexed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$relinquished, fill =gumtree$relinquished)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Relinquished status", y = "Frequency")
ggplot(gumtree,aes(gumtree$state, fill =gumtree$state)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "State", y = "Frequency")
dev.off()
terms = predict(stepautologmodel,newdata=example,type="terms")
library(tidyverse)
library(broom)
library(readxl)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
summary(gumtree$price)
fulllog = logprice~(age+cross+vacc+micro+desex+relinquished+state)^2
smallestlog = logprice ~ 1
backwardslog = lm(fulllog,data=gumtree)
forwardslog = lm(smallestlog,data = gumtree)
forwardslogmodel = step(forwardslog,scope= fulllog,direction= "forward")
backwardslogmodel = step(backwardslog,direction = "backward")
stepautologmodel = step(backwardslog,scope = fulllog,direction = "both" )
example = data.frame(state="SA",age=1,cross="yes",vacc="Vaccinated",desex="Desexed",relinquished="yes",micro="NA")
anslog = predict(stepautologmodel,newdata=example)
exp(anslog)
terms = predict(stepautologmodel,newdata=example,type="terms")
terms
levels(gumtree$micro)
contrasts(levels(gumtree$mirco))
contrasts(levels(gumtree$micro))
contrasts(factir(gumtree$micro))
contrasts(factor(gumtree$micro))
contrasts(gumtree$cross)
contrasts(gumtree$vacc)
contrasts(gumtree$micro)
contrasts(gumtree$desex)
contrasts(gumtree$relinquished)
contrasts(gumtree$state)
example = data.frame(state="WA",age=1,cross="yes",vacc="Vaccinated",desex="Desexed",relinquished="yes",micro="NA")
anslog = predict(stepautologmodel,newdata=example)
exp(anslog)
glance(stepautologmodel)
stepautologmodel
summary(stepautologmodel)
list(step_auto = stepautologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model,term,estimate)%>%
spread(Model,estimate)
list(value = stepautologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model,term,estimate)%>%
spread(Model,estimate)
list(value = stepautologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model,estimate)%>%
spread(Model,estimate)
list(value = stepautologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model,term,estimate)%>%
spread(estimate)
glance(forwardslogmodel)
glance(backwardslogmodel)
glance(stepautologmodel)
glance(stepautomodel)
glance(stepautologmodel)
library(tidyverse)
library(readxl)
library(broom)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
full = price~(age+cross+vacc+micro+desex+relinquished+state)^2
smallest = price ~ 1
backwards= lm(full,data=gumtree)
forwards = lm(smallest,data = gumtree)
forwardsmodel = step(forwards,scope= fullnolog,direction= "forward")
backwardsmodel = step(backwards,direction = "backward")
stepautomodel = step(backwards,scope = full,direction = "both" )
forwardsmodel = step(forwards,scope= full,direction= "forward")
fulllog = logprice~(age+cross+vacc+micro+desex+relinquished+state)^2
smallestlog = logprice ~ 1
backwardslog = lm(fulllog,data=gumtree)
forwardslog = lm(smallestlog,data = gumtree)
forwardslogmodel = step(forwardslog,scope= fulllog,direction= "forward")
backwardslogmodel = step(backwardslog,direction = "backward")
stepautologmodel = step(backwardslog,scope = fulllog,direction = "both" )
fullsqrt = sqrt(price)~(age+cross+vacc+micro+desex+relinquished+state)^2
smallestsqrt = price^2 ~ 1
backwardssqrt = lm(fullsqrt,data=gumtree)
forwardssqrt = lm(smallestsqrt,data = gumtree)
forwardssqrtmodel = step(forwardssqrt,scope= fullsqrt,direction= "forward")
backwardssqrtmodel = step(backwardssqrt, direction = "backward")
stepautosqrtmodel = step(backwardssqrt, scope = fullsqrt,direction = "both" )
list(forward_auto = forwardsnologmodel,
backward_auto = backwardsnologmodel,
step_auto = stepautonologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model, term, estimate)%>%
spread(Model, estimate)
list(forward_auto = forwardsmodel,
backward_auto = backwardsmodel,
step_auto = stepautomodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model, term, estimate)%>%
spread(Model, estimate)
glance(forwardslogmodel)
glance(backwardslogmodel)
glance(stepautologmodel)
glance(stepautomodel)
glance(stepautologmodel)
glance(stepautosqrtmodel)
library(tidyverse)
library(broom)
library(readxl)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
summary(gumtree$price)
summary(gumtree$age)
table(gumtree$cross)
table(gumtree$vacc)
table(gumtree$micro)
table(gumtree$desex)
table(gumtree$relinquished)
table(gumtree$state)
pdf(file = "varAnalPlots.pdf")
ggplot(gumtree,aes(price)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(age)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(gumtree$cross, fill =gumtree$cross)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Crossbreed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$vacc, fill =gumtree$vacc)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1")+
labs(x = "Vaccination status", y = "Frequency")
ggplot(gumtree,aes(gumtree$micro, fill =gumtree$micro)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Microchipped status", y = "Frequency")
ggplot(gumtree,aes(gumtree$desex, fill =gumtree$desex)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Desexed status", y = "Frequency")
ggplot(gumtree,aes(gumtree$relinquished, fill =gumtree$relinquished)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "Relinquished status", y = "Frequency")
ggplot(gumtree,aes(gumtree$state, fill =gumtree$state)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Set1") +
labs(x = "State", y = "Frequency")
dev.off()
pdf(file="ProjectGraphs.pdf")
ggplot(aes(x=age,y=price),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against price")+xlab("Age of dog")+ylab("Price of dog")
ggplot(aes(x=cross,y=price),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against price")+xlab("Cross breed or not")+ylab("Price of dog") + ylim(0,3000)
ggplot(aes(x=vacc,y=price),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against price")+xlab("Vaccinated or not")+ylab("Price of dog") +ylim(0,2500)
ggplot(aes(x=micro,y=price),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against price")+xlab("Microchipped or not")+ylab("Price of dog")+ylim(0,2000)
ggplot(aes(x=desex,y=price),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against price")+xlab("Desexed or not")+ylab("Price of dog")+ylim(0,4000)
ggplot(aes(x=relinquished,y=price),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against price")+xlab("Relinquished or not")+ylab("Price of dog")+ylim(0,3000)
ggplot(aes(x=state,y=price),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against price")+xlab("State of seller")+ylab("Price of dog") +ylim(0,2000)
ggplot(aes(x=age,y=logprice),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against logprice")+xlab("Age of dog")+ylab("logprice of dog")
ggplot(aes(x=cross,y=logprice),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against logprice")+xlab("Cross breed or not")+ylab("logprice of dog") + ylim(0,log(3000))
ggplot(aes(x=vacc,y=logprice),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against logprice")+xlab("Vaccinated or not")+ylab("logprice of dog") +ylim(0,log(2500))
ggplot(aes(x=micro,y=logprice),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against logprice")+xlab("Microchipped or not")+ylab("logprice of dog")+ylim(0,log(2000))
ggplot(aes(x=desex,y=logprice),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against logprice")+xlab("Desexed or not")+ylab("logprice of dog")+ylim(0,log(4000))
ggplot(aes(x=relinquished,y=logprice),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against logprice")+xlab("Relinquished or not")+ylab("logprice of dog")+ylim(0,log(3000))
ggplot(aes(x=state,y=logprice),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against logprice")+xlab("State of seller")+ylab("logprice of dog") +ylim(0,log(2000))
ggplot(aes(x=age,y=sqrt(price)),data=subset(gumtree,!is.na(age))) + geom_point()+
ggtitle("Bivariabe analysis: Age against sqrt(price)")+xlab("Age of dog")+ylab("sqrt(price) of dog")
ggplot(aes(x=cross,y=sqrt(price)),data=subset(gumtree,!is.na(cross))) + geom_boxplot()+
ggtitle("Bivariate analysis: Cross-breeding against sqrt(price)")+xlab("Cross breed or not")+ylab("sqrt(price) of dog") + ylim(0,100)
ggplot(aes(x=vacc,y=sqrt(price)),data=subset(gumtree,!is.na(vacc))) + geom_boxplot()+
ggtitle("Bivariate analysis: Vaccincation against sqrt(price)")+xlab("Vaccinated or not")+ylab("sqrt(price) of dog") +ylim(0,80)
ggplot(aes(x=micro,y=sqrt(price)),data=subset(gumtree,!is.na(micro))) + geom_boxplot()+
ggtitle("Bivariate analysis: Microchipped against sqrt(price)")+xlab("Microchipped or not")+ylab("sqrt(price) of dog")+ylim(0,80)
ggplot(aes(x=desex,y=sqrt(price)),data=subset(gumtree,!is.na(desex))) + geom_boxplot()+
ggtitle("Bivariate analysis: Desexing against sqrt(price)")+xlab("Desexed or not")+ylab("sqrt(price) of dog")+ylim(0,100)
ggplot(aes(x=relinquished,y=sqrt(price)),data=subset(gumtree,!is.na(relinquished))) + geom_boxplot()+
ggtitle("Bivariate analysis: Relinquished against sqrt(price)")+xlab("Relinquished or not")+ylab("sqrt(price) of dog")+ylim(0,100)
ggplot(aes(x=state,y=sqrt(price)),data=subset(gumtree,!is.na(state))) + geom_boxplot()+
ggtitle("Bivariate analysis: State against sqrt(price)")+xlab("State of seller")+ylab("sqrt(price) of dog") +ylim(0,100)
dev.off()
full = price~(age+cross+vacc+micro+desex+relinquished+state)^2
smallest = price ~ 1
backwards= lm(full,data=gumtree)
forwards = lm(smallest,data = gumtree)
forwardsmodel = step(forwards,scope= full,direction= "forward")
backwardsmodel = step(backwards,direction = "backward")
stepautomodel = step(backwards,scope = full,direction = "both" )
fulllog = logprice~(age+cross+vacc+micro+desex+relinquished+state)^2
smallestlog = logprice ~ 1
backwardslog = lm(fulllog,data=gumtree)
forwardslog = lm(smallestlog,data = gumtree)
forwardslogmodel = step(forwardslog,scope= fulllog,direction= "forward")
backwardslogmodel = step(backwardslog,direction = "backward")
stepautologmodel = step(backwardslog,scope = fulllog,direction = "both" )
fullsqrt = sqrt(price)~(age+cross+vacc+micro+desex+relinquished+state)^2
smallestsqrt = price^2 ~ 1
backwardssqrt = lm(fullsqrt,data=gumtree)
forwardssqrt = lm(smallestsqrt,data = gumtree)
forwardssqrtmodel = step(forwardssqrt,scope= fullsqrt,direction= "forward")
backwardssqrtmodel = step(backwardssqrt, direction = "backward")
stepautosqrtmodel = step(backwardssqrt, scope = fullsqrt,direction = "both" )
list(forward_auto = forwardsmodel,
backward_auto = backwardsmodel,
step_auto = stepautomodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model, term, estimate)%>%
spread(Model, estimate)
glance(forwardslogmodel)
glance(backwardslogmodel)
glance(stepautologmodel)
glance(stepautomodel)
glance(stepautologmodel)
glance(stepautosqrtmodel)
list(value = stepautologmodel)%>%
map_df(broom::tidy, .id = "Model")%>%
select(Model,term,estimate)%>%
spread(Model,estimate)
pdf(file="Assumptions.pdf")
tmp = par(mfrow = c(1,3))
plot(stepautomodel, which=1:3, main = "Stepwise using Price")
plot(stepautologmodel, which=1:3, main = "Stepwise using log(Price)")
plot(stepautosqrtmodel, which=1:3, main= "Stepwise using sqrt(Price)")
dev.off()
glance(stepautosqrtmodel)
glance(stepautologmodel)
example = data.frame(state="SA",age=1,cross="yes",vacc="Vaccinated",desex="Desexed",relinquished="yes",micro="NA")
example = data.frame(state="SA",age=1,cross="yes",vacc="Vaccinated",desex="Desexed",relinquished="yes",micro="NA")
anslog = predict(stepautologmodel,newdata=example)
exp(anslog)
anssqrt=predict(stepautosqrtmodel, newdata=example)
(anssqrt)^2
library(tidyverse)
library(broom)
library(readxl)
gumtree = read_xlsx("Gumtree_dogs.xlsx")
gumtree <- gumtree %>% select(price, age, cross, vacc, micro, desex, relinquished, state)
gumtree$price[gumtree$price=='NA'] = NA
gumtree$price[gumtree$age=='NA'] = NA
gumtree$cross <- factor(gumtree$cross)
gumtree$vacc <- factor(gumtree$vacc)
gumtree$micro <- factor(gumtree$micro)
gumtree$desex <- factor(gumtree$desex)
gumtree$relinquished <- factor(gumtree$relinquished)
gumtree$state <- factor(gumtree$state)
gumtree$price <- as.numeric(gumtree$price)
gumtree$age <- as.numeric(gumtree$age)
gumtree  <- gumtree %>%
filter(age > 0, age <= 25)
summary(gumtree$price < 0)
logprice = log(gumtree$price)
logprice[logprice==-Inf]=NA
ggplot(aes(logprice)) + geom_histogram(col = "black", fill = "orange")
ggplot(gumtree,aes(logprice)) + geom_histogram(col = "black", fill = "orange")
