t = seq(0,999,1)
t
?rnorm
Z = rnorm(1000,0,1)
Z
?vector()
Y = vector(mode ="numeric", length = 1000)
Y
Y[t]
Y[t] = sqrt(1-1/t^2) * Y[t-1] + 1/t * Z
t = seq(1,999,1)
t = seq(1,999,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="numeric", length = 1000)
Y[t] = sqrt(1-1/t^2) * Y[t-1] + 1/t * Z[t]
length(Y[t-1])
length(t)
Y[0]
Y[999]
Y
t = seq(1,999,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="numeric", length = 1000)
Y[t] = sqrt(1-1/t^2) * Y[t-1] + 1/t * Z[t]
1 - 1/t^2
1 - (1/t^2)
1 - (1/(t^2))
length(1-1/t^2)
length(Y[t-1])
length(Y)
length(Z)
t = seq(1,999,1)
Z = rnorm(999,0,1)
Y = vector(mode ="numeric", length = 100)
Y[t] = sqrt(1-1/t^2) * Y[t-1] + 1/t * Z[t]
Y
Z
t
?sqrt
Y[t-1]
t[-1]
t[1000]
t[999]
Z(999)
Z[999]
Z[1000]
Y[0]
Y[0] = 0
Y[t] = sqrt(1-1/t^2) * Y[t-1] + 1/t * Z[t]
t = seq(1,999,1)
Z = rnorm(999,0,1)
Y = vector(mode ="numeric", length = 100)
Y[0] = 0
length(t)
length(Y)
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y
t = seq(1,999,1)
Z = rnorm(999,0,1)
Y = vector(mode ="numeric", length = 100)
Y[0] = 0
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
U
Y
plot(Y)
?vectr
?vector
Y = vector(mode ="double", length = 100)
Y[0] = 0
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[0] = 0
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
t = seq(1,999,1)
Z = rnorm(999,0,1)
Y = vector(mode ="double", length = 100)
Y[0] = 0
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y = vector(mode ="double", length = 999)
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
t = seq(0,999,1)
Z = rnorm(999,0,1)
Y = vector(mode ="double", length = 999)
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y = vector(mode ="double", length = 1000)
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y[0] = Z[0]
t = seq(0,999,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[0] = Z[0]
Y[t+1] = sqrt(1-1/(t+1)^2) * Y[t] + 1/(t+1) * Z[t+1]
Y
plot(Y)
Y[t] = sqrt(1-1/(t)^2) * Y[t-1] + 1/(t) * Z[t]
t = seq(1,999,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[0] = Z[0]
Y[t] = sqrt(1-1/(t)^2) * Y[t-1] + 1/(t) * Z[t]
size(1-1/t^2)
length(1-1/t^2)
length(Y[t-1])
t-1
(t-1)[0]
t = seq(1,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[0] = Z[0]
Y[t] = sqrt(1-1/(t)^2) * Y[t-1] + 1/(t) * Z[t]
1-1/t
length(1-1/t)
length(Y[t-1])
Y[t-1]
Y[t] = sqrt(1-1/(t)^2)  + 1/(t) * Z[t]
Y[0] = Z[0]
Y = vector(mode ="double", length = 1000)
Y[0] = Z[0]
t2 = seq(0,999,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[0] = Z[0]
Y[t] = sqrt(1-1/(t)^2) * Y[t2] + 1/(t) * Z[t]
plot(Y)
length(t2)
length(t)
Y[t2]
Y[0]
Y[1]
t[0]
t = seq(2,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y
Y[1] = Z[1]
Y[t] = sqrt(1-(1/(t)^2)) * Y[t-1] + 1/(t) * Z[t]
plot(ts(Y))
Y[t] = sqrt(1-(1/(t^2))) * Y[t-1] + 1/(t) * Z[t]
t = seq(2,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = sqrt(1-(1/(t^2))) * Y[t-1] + 1/(t) * Z[t]
plot(ts(Y))
for (i in 1:100){
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = sqrt(1-1/(t)^2) * Y[t-1] + 1/(t) * Z[t]
#plotting each y set with a different colour
lines(ts(Y), col=rgb(runif(1,min=0,max=1),runif(1,min=0,max=1),runif(1,min=0,max=1),1))
}
t = seq(2,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = sqrt(1-(1/(t^2))) * Y[t-1] + (1/t) * Z[t]
plot(ts(Y))
for (i in 1:100){
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = sqrt(1-(1/(t^2))) * Y[t-1] + (1/t) * Z[t]
#plotting each y set with a different colour
lines(ts(Y), col=rgb(runif(1,min=0,max=1),runif(1,min=0,max=1),runif(1,min=0,max=1),1))
}
?rnorm
t = seq(2,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = (sqrt(1-(1/(t^2))) * Y[t-1]) + ((1/t) * Z[t])
plot(ts(Y))
Y = vector(mode ="double", length = 1000)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
plot(ts(Y))
Y[t] = (sqrt(1-(1/(t^2))) * Y[t-1]) + ((1/t) * Z[t])
plot(NULL, xlim=c(0,1000), ylim=c(-1,1), ylab="Y", xlab="Time")
for (i in 1:100){
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
Y[1] = Z[1]
Y[t] = (sqrt(1-(1/(t^2))) * Y[t-1]) + ((1/t) * Z[t])
#plotting each y set with a different colour
lines(ts(Y), col=rgb(runif(1,min=0,max=1),runif(1,min=0,max=1),runif(1,min=0,max=1),1))
}
edit(Y)
i
t = seq(2,1000,1)
Z = rnorm(1000,0,1)
Y = vector(mode ="double", length = 1000)
t
z
Z
for (i in 2:1000){
Y[i] = (sqrt(1-(1/(i^2))) * Y[i-1]) + ((1/i) * Z[i])
}
plot(ts(Y))
?noise
arima.sim()
arima.sim(200)
help arima
?arima
AR(1)
clc
cls
clear
arima(x)
x = rnorm(200)
arima(x)
x = rnorm(200)
arima(x)
arima(x)
tmp = par(mfrow=c(2,3))
data(co2)
times=time(co2)
month=factor(rep(c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"),39))
lm.seasonal=lm(co2~month+times+I(times^2)+I(times^3))
res=co2-fitted(lm.seasonal)
plot(res)
par(tmp)
res=co2-fitted(lm.seasonal)
par(mfrow=c(1,1))
data(co2)
times=time(co2)
month=factor(rep(c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"),39))
lm.seasonal=lm(co2~month+times+I(times^2)+I(times^3))
res=co2-fitted(lm.seasonal)
res=co2-fitted(lm.seasonal)
plot(res)
x=c(1:512)/512
ts(x)
plot(ts(x))
spectrum(x)
spectrum(ts(x))
?spectrum
plot(x,log="yes")
spectrum(x,log=yes)
spectrum(x,log="yes")
x=c(1:512)/512
x=c(1:512)/512
x = ts(x)
plot(x)
??periodogram
y = cos(2*pi*x)
y.spectrum = spectrum(y, plot=F)
y.spec = y.spectrum$spec
y.freq = y.spectrum$freq
y.spectrum = spectrum(y, plot=F)
spectrum(x,plot=F)
spectrum(x,log="no", detrend="F")
spectrum(x,log="yes", detrend="F")
spectrum(x,log="no", detrend="F")
spectrum(x,log="yes", detrend="F")
spectrum(x,log="YES", detrend="T")
spectrum(x,log="yes", detrend="T")
spectrum(x,log="no", detrend="T")
?spectrum
spectrum(x,log="no", detrend="F")
spectrum(x,log="yes", detrend="F")
y.spectrum = spectrum(y, plot=T)
y.spectrum = spectrum(y, plot=F)
y.freq = y.spectrum$freq
y.spec = y.spectrum$spec
plot(y.spec,y.freq)
y = cos(2*pi*x)
y=ts(y)
spectrum(y)
spectrum(y,log="no")
y = cos(2*pi*x)
y=ts(y)
spectrum(y,log="no")
spectrum(y,log="yes")
y = sin(2*pi*x)+cos(20*pi*x)
y=ts(y)
spectrum(y,log="no")
spectrum(y,log="yes")
u=rnorm(512)
u=ts(u)
plot(u)
spectrum(u,log="no")
spectrum(u,log="yes")
z = y+u
z=ts(z)
spectrum(z,log="no")
spectrum(z,log="yes")
ldeaths = ldeaths
acf(ldeaths)
plot(ldeaths)
spectrum(ldeaths)
acf(ldeaths)
cpgramm(ldeaths)
cpgram(ldeaths)
spectrum(ldeaths,log="no")
spectrum(ldeaths)
spectrum(ldeaths,log="no")
deltat(ldeaths)
1/12
spectrum(ldeaths,log="no")
cpgram(ldeaths)
spectrum(ldeaths,log="no")
cpgram(ldeaths)
z = rnorm(1001)
y = rep(0,1001)
b=0.5
for(i in 2:1000) y[i]=z[i]+b*z[i-1]
y=y[-1]
y=ts(y)
z = rnorm(1001)
y = rep(0,1001)
b=0.95
for(i in 2:1000) y[i]=z[i]+b*z[i-1]
y=y[-1]
y=ts(y)
acf(y)
cpgram(y)
spectrum(y)
cpgram(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[10001:20000])
plot(y)
plot(y)
z=rnorm(2000)
y=rep(0,2000)
a=0.5
for(i in 2:2000) y[i]=a*y[i-1]+z[i]
y=ts(y[1001:2000])
plot(y)
ldeaths = ldeaths
plot(ldeaths)
spectrum(ldeaths)
acf(ldeaths)
cpgram(ldeaths)
spectrum(ldeaths,log="no")
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[10001:20000])
plot(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
ts(y)
plot(ts(y))
y=ts(y[10001:20000])
plot(y)
acf(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
acf(ts(y))
acf(y)
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[10001:20000])
plot(y)
acf(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[10001:20000])
plot(y)
acf(y)
spectrum(y)
cpgram(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[1001:20000])
plot(y)
acf(y)
spectrum(y)
cpgram(y)
acf(y)
z=rnorm(20000)
y=rep(0,20000)
a=0.9
for(i in 2:20000) y[i]=a*y[i-1]+z[i]
y=ts(y[1001:20000])
plot(y)
acf(y)
z=rnorm(2000)
y=rep(0,2000)
for(i in 3:2000) y[i]=-0.5*y[i-1] + 0.505*y[i-2]+z[i]
y=ts(y[1001:2000])
plot(y)
z=rnorm(2000)
y=rep(0,2000)
a=0.5
for(i in 3:2000) y[i]=-0.5*y[i-1] + 0.505*y[i-2]+z[i]
y=ts(y[1001:2000])
plot(y)
acf(y)
z=rnorm(2000)
y=rep(0,2000)
a=0.5
for(i in 3:2000) y[i]=-0.5*y[i-1] + 0.505*y[i-2]+z[i]
plot(ts(y))
z=rnorm(2000)
y=rep(0,2000)
a=0.5
for(i in 3:2000) y[i]=-0.5*y[i-1] + 0.4*y[i-2]+z[i]
y=ts(y[1001:2000])
plot(y)
z=rnorm(2000)
y=rep(0,2000)
a=0.5
for(i in 3:2000) y[i]=-0.5*y[i-1] + 0.505*y[i-2]+z[i]
y=ts(y[1001:2000])
plot(y)
plot(y[1:100])
plot(ts(y[1:100])
)
?polyroot
polyroot([1,0.5,-0.505])
polyroot(c(1,0.5,-0.505)
polyroot(c(1,0.5,-0.505))
polyroot(c(1,0.5,-0.505))
polyroot(c(1,0.5,-0.4))
?arima.sim
arima.sim(2,2)
arima.sim(c(2,2))
arima.sim(n=10000,list(ar = 2, ma=2))
arima.sim(n=10000,list(ar = c(0.1,0.25), ma=c(0.5,0.5)))
plot(q6)
q6 = arima.sim(n=10000,list(ar = c(0.1,0.25), ma=c(0.5,0.5)))
plot(q6
plot(q6)
plot(q6)
z=rnorm(20000)
y=rep(0,20000)
for(t in 3:20000) Y[t] =- 0.5* Y[t-1] - 0.25*Y[t-2] + Z[t] + 0.5*Z[t-1] + 0.5*Z[t-2]
z=rnorm(20000)
Y=rep(0,20000)
for(t in 3:20000) Y[t] =- 0.5* Y[t-1] - 0.25*Y[t-2] + Z[t] + 0.5*Z[t-1] + 0.5*Z[t-2]
plot(ts(Y))
Y
z=rnorm(20000)
Y=rep(0,20000)
for(t in 3:20000) Y[t] =- 0.1* Y[t-1] - 0.25*Y[t-2] + Z[t] + 0.5*Z[t-1] + 0.5*Z[t-2]
plot(ts(Y))
Y = ts(Y[10001:20000])
plot(ts(Y))
plot(Y)
for(t in 3:20000) Y[t] =- 0.1* Y[t-1] - 0.25*Y[t-2] + Z[t] + 0.5*Z[t-1] + 0.5*Z[t-2]
Y = ts(Y[10001:20000])
plot(Y)
Z=rnorm(20000)
Y=rep(0,20000)
for(t in 3:20000) Y[t] =- 0.1* Y[t-1] - 0.25*Y[t-2] + Z[t] + 0.5*Z[t-1] + 0.5*Z[t-2]
Y = ts(Y[10001:20000])
plot(Y)
q6 = arima.sim(n=10000,list(ar = c(0.1,0.25), ma=c(0.5,0.5)))
plot(q6)
plot(Y)
plot(q6)
fyw = function(x){1/(1.64 - 1.6*cos(x))}
plot(fyw(1:1000),type='1')
plot(fyw(1:1000))
plot(fyw(1:pi))
plot(fyw,0,pi)
plot(fuw,0,pi)
fuw = function(x){-2*cos(x)/(1.64 - 1.6*cos(x))}
plot(fuw,0,pi)
fyw = function(x){1/(1.64 - 1.6*cos(x))}
plot(fyw,0,pi)
aw2 = function(x){-2*cos(x)}
plot(aw2,0,pi)
fuw = function(x){-2*cos(x)/(1.64 - 1.6*cos(x))}
plot(fuw,0,pi)
pdf(file="A5Plots.pdf")
fyw = function(x){1/(1.64 - 1.6*cos(x))}
plot(fyw,0,pi)
aw2 = function(x){-2*cos(x)}
plot(aw2,0,pi)
fuw = function(x){-2*cos(x)/(1.64 - 1.6*cos(x))}
plot(fuw,0,pi)
dev.off()
pdf(file="A5Plots.pdf")
fyw = function(w){1/(1.64 - 1.6*cos(w))}
plot(fyw,0,pi)
aw2 = function(w){-2*cos(w)}
plot(aw2,0,pi)
fuw = function(w){-2*cos(w)/(1.64 - 1.6*cos(w))}
plot(fuw,0,pi)
dev.off()
